/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stuAdier;

import java.awt.BorderLayout;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.net.URL;
import java.security.Security;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;
import java.sql.*;
import java.util.StringTokenizer;
import java.util.concurrent.Exchanger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import org.icepdf.ri.common.MyAnnotationCallback;


/**
 *
 * @author TSS
 */
public class moduleLists extends javax.swing.JFrame {

    
    //int s1;
    String filePath,fileID,selected;
    String url="jdbc:mysql://localhost:3306/studentaider?user=root&password=root";
    Connection conn;
    ResultSet res,res2;
    Statement sta;
    int selIndex;
    DefaultListModel dmodel;
   
    static String lblname;
    JPanel jPanel1;
    //DefaultListModel 
    URL path;
    static DefaultListModel lmodel;
    
    public moduleLists() {
        
        dmodel=new DefaultListModel();
        
        initComponents(); 
        year1Modules.validate();
        year1Modules.repaint();
        
        //adding value to year1modulesList
        String dbfile1[]=new String[10];
        DefaultListModel model=new DefaultListModel();
         try{
                conn=DriverManager.getConnection(url);
                System.out.println("Get connected!");
                String query2="select id from year1books;";
                Statement stm=conn.createStatement();
                ResultSet res=stm.executeQuery(query2);
                
                for(int i=0;res.next();i++){
                    dbfile1[i]=res.getString(1);
                    }
                    System.out.println("file retriving done.....");
                //********************
                    //year1Modules.setModel(new DefaultListModel());
                    model=(DefaultListModel)year1Modules.getModel();
                    for(int j=0;j<dbfile1.length;j++){
                    model.addElement(dbfile1[j]);
                    }
                    year1Modules.setModel(model);

                    for(int i=0;i<model.getSize();i++){
                     year1Modules.setModel(model);
                    }

                    year1Modules.setModel(model);
                    System.out.println(year1Modules.getModel());
           }
           catch(Exception e)
           {
               e.printStackTrace();
           }
        
              
    }
    
    public moduleLists(DefaultListModel model)
    {
        lmodel=model;
    }
    public moduleLists(String name)
    {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        year1Modules = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        year2Modules = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        year3Modules = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        year4Modules = new javax.swing.JList();
        jScrollPane5 = new javax.swing.JScrollPane();
        year5Modules = new javax.swing.JList();
        spAllMol = new javax.swing.JScrollPane();
        allModules = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setBackground(new java.awt.Color(102, 102, 102));

        year1Modules.setBackground(new java.awt.Color(102, 102, 102));
        year1Modules.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        year1Modules.setForeground(new java.awt.Color(204, 204, 225));
        year1Modules.setModel(new DefaultListModel()
        );
        year1Modules.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        year1Modules.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                year1ModulesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(year1Modules);

        jScrollPane2.setBackground(new java.awt.Color(102, 102, 102));

        year2Modules.setBackground(new java.awt.Color(102, 102, 102));
        year2Modules.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        year2Modules.setForeground(new java.awt.Color(204, 204, 225));
        year2Modules.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Requirement Engineering (CS-2107)", "Software design (CS-2108)", "Software testing, operation and management (CS-2109)", "Fundamantal database management system (CS-2110)" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        year2Modules.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        year2Modules.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                year2ModulesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(year2Modules);

        jScrollPane3.setBackground(new java.awt.Color(102, 102, 102));

        year3Modules.setBackground(new java.awt.Color(102, 102, 102));
        year3Modules.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        year3Modules.setForeground(new java.awt.Color(204, 204, 225));
        year3Modules.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Software Configuration Management (CS-3107)", "Software Process Management (CS-3108)", "Computer-Aided Software Engineering (CS-3109)", "Software Re-Engineering (CS-3110)", "Web-based system Development (CS-3111)" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        year3Modules.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        year3Modules.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                year3ModulesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(year3Modules);

        jScrollPane4.setBackground(new java.awt.Color(102, 102, 102));

        year4Modules.setBackground(new java.awt.Color(102, 102, 102));
        year4Modules.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        year4Modules.setForeground(new java.awt.Color(204, 204, 225));
        year4Modules.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "IT in business Management (CS-4207)", "Social and Development Issues (CS-4208)", "Network Computing (CS-4209)", "Student on it Industering (CS-4110)", "Databases Development & Implmentation (CS-4111)" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        year4Modules.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        year4Modules.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                year4ModulesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(year4Modules);

        jScrollPane5.setBackground(new java.awt.Color(102, 102, 102));

        year5Modules.setBackground(new java.awt.Color(102, 102, 102));
        year5Modules.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        year5Modules.setForeground(new java.awt.Color(204, 204, 225));
        year5Modules.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Advanced Software Engineering (CS-5207).pdf", "Advanced Database & Database Administration (CS-5208).pdf", "Information System Management (CS-5209).pdf", "Computer wison and Image Processing (CS-5210).pdf", "Wireless Networks and Mobile Computing (CS-5211).pdf", "Research Project on IT industies (CS-5212).pdf", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        year5Modules.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        year5Modules.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                year5ModulesMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(year5Modules);

        spAllMol.setBackground(new java.awt.Color(102, 102, 102));
        spAllMol.setAutoscrolls(true);

        allModules.setBackground(new java.awt.Color(102, 102, 102));
        allModules.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        allModules.setForeground(new java.awt.Color(204, 204, 225));
        allModules.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Computing Fundamental (CS-1103)", "Program development methodology (CS-1104)", "Requirement Engineering (CS-2107)", "Software design (CS-2108)", "Software testing, operation and management (CS-2109)", "Fundamantal database management system (CS-2110)", "Software Configuration Management (CS-3107)", "Software Process Management (CS-3108)", "Computer-Aided Software Engineering (CS-3109)", "Software Re-Engineering (CS-3110)", "Web-based system Development (CS-3111)", "IT in business Management (CS-4207)", "Social and Development Issues (CS-4208)", "Network Computing (CS-4209)", "Student on it Industering (CS-4110)", "Databases Development & Implmentation (CS-4111)", "Advanced Software Engineering (CS-5207) ", "Advanced Database & Database Administration (CS-5208)", "Information System Management (CS-5209)", "Computer wison and Image Processing (CS-5210)", "Wireless Networks and Mobile Computing (CS-5211)", "Research Project on IT industies (CS-5212)", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        allModules.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        allModules.setVisibleRowCount(5);
        allModules.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                allModulesValueChanged(evt);
            }
        });
        spAllMol.setViewportView(allModules);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(spAllMol, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1422, 1422, 1422))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spAllMol, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 230, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
   
    
    private void allModulesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_allModulesValueChanged
        if(evt.getValueIsAdjusting())
            return;
        //module=allModules.getSelectedValue().toString();
        //System.out.println(module);
    }//GEN-LAST:event_allModulesValueChanged

    private void year1ModulesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_year1ModulesMouseClicked
        
        
        selIndex=year1Modules.getSelectionMode();
        selected=(String) year1Modules.getSelectedValue();
        AdminPage ap=new AdminPage(selected,selIndex);
        
        if(evt.getClickCount()==2)
        {
        String dbfile=null;
        String name=year1Modules.getSelectedValue().toString();
        
        System.out.println(name+".........");

        try{
            conn=DriverManager.getConnection(url);
            System.out.println("Get connected!");
                        
            PreparedStatement pstm=conn.prepareStatement("select id from books where id=?;");
            pstm.setString(1,name);
            
            res=pstm.executeQuery();
            
            while(res.next())
            {
                dbfile=res.getString("id");
            }
            
            
            System.out.println(dbfile);
        conn.close();
        if(dbfile.equalsIgnoreCase(name))
        {
        path=moduleLists.class.getResource("/Java Basic Day5.pdf");   
        SwingController controller = new SwingController();
        SwingViewBuilder factory=new SwingViewBuilder(controller);
        JPanel viewComponent=factory.buildViewerPanel();
        
        controller.getDocumentViewController().setAnnotationCallback(
        new org.icepdf.ri.common.MyAnnotationCallback(
        controller.getDocumentViewController()));
        
        MyAnnotationCallback myAnnotationCallback=new MyAnnotationCallback(
                controller.getDocumentViewController());
         
        controller.getDocumentViewController().setAnnotationCallback(myAnnotationCallback);
        
        System.out.println(path);
        controller.openDocument(path);
        
        JFrame Frame=new JFrame();
        //Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Frame.add(viewComponent);
        Frame.pack();
        Frame.validate();
        Frame.setVisible(true );
        
        }
        year1Modules.repaint();
        year1Modules.updateUI();
                
         }
        catch(Exception e)
        {
         e.printStackTrace();
        }
        }
    }//GEN-LAST:event_year1ModulesMouseClicked

    private void year4ModulesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_year4ModulesMouseClicked
        if(evt.getClickCount()==2)
        {
            String dbfile=null;
     
        String name=year4Modules.getSelectedValue().toString();
        System.out.println(name);
        
        try{
            conn=DriverManager.getConnection(url);
            System.out.println("Get connected!");
                       
            PreparedStatement pstm=conn.prepareStatement("select id from books where id=?;");
            pstm.setString(1,name);
            
            res=pstm.executeQuery();
            
            while(res.next())
            {
                dbfile=res.getString("id");
            }
            System.out.println(dbfile);
        
        if(dbfile.equalsIgnoreCase(name))
            
        {
            
        SwingController controller = new SwingController();
        SwingViewBuilder factory=new SwingViewBuilder(controller);
        JPanel viewComponent=factory.buildViewerPanel();
        
        controller.getDocumentViewController().setAnnotationCallback(
        new org.icepdf.ri.common.MyAnnotationCallback(
        controller.getDocumentViewController()));
        
        MyAnnotationCallback myAnnotationCallback=new MyAnnotationCallback(
                controller.getDocumentViewController());
         
        controller.getDocumentViewController().setAnnotationCallback(myAnnotationCallback);
   
        System.out.println(path);
        controller.openDocument(path);
        JFrame Frame=new JFrame();
        //Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Frame.add(viewComponent);
        Frame.pack();
        Frame.validate();
        Frame.setVisible(true );
        }
        
         }
        catch(Exception e)
        {
         e.printStackTrace();
        }
        }
    }//GEN-LAST:event_year4ModulesMouseClicked

    private void year2ModulesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_year2ModulesMouseClicked
        if(evt.getClickCount()==2)
        {
             
        String dbfile=null;
     
        String name=year2Modules.getSelectedValue().toString();
        System.out.println(name);
        
        try{
            conn=DriverManager.getConnection(url);
            System.out.println("Get connected!");
                       
            PreparedStatement pstm=conn.prepareStatement("select id from books where id=?;");
            pstm.setString(1,name);
            
            res=pstm.executeQuery();
            
            while(res.next())
            {
                dbfile=res.getString("id");
            }
            System.out.println(dbfile);
        
        if(dbfile.equalsIgnoreCase(name))
            
        {
            
        SwingController controller = new SwingController();
        SwingViewBuilder factory=new SwingViewBuilder(controller);
        JPanel viewComponent=factory.buildViewerPanel();
        
        controller.getDocumentViewController().setAnnotationCallback(
        new org.icepdf.ri.common.MyAnnotationCallback(
        controller.getDocumentViewController()));
        
        MyAnnotationCallback myAnnotationCallback=new MyAnnotationCallback(
                controller.getDocumentViewController());
         
        controller.getDocumentViewController().setAnnotationCallback(myAnnotationCallback);
   
        System.out.println(path);
        controller.openDocument(path);
        JFrame Frame=new JFrame();
        Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Frame.add(viewComponent);
        Frame.pack();
        Frame.validate();
        Frame.setVisible(true );
        }
        
         }
        catch(Exception e)
        {
         e.printStackTrace();
        }
        }
    }//GEN-LAST:event_year2ModulesMouseClicked

    private void year3ModulesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_year3ModulesMouseClicked

       if(evt.getClickCount()==2)
       {
            
        String dbfile=null;
     
        String name=year3Modules.getSelectedValue().toString();
        System.out.println(name);
        
        try{
            conn=DriverManager.getConnection(url);
            System.out.println("Get connected!");
                       
            PreparedStatement pstm=conn.prepareStatement("select id from books where id=?;");
            pstm.setString(1,name);
            
            res=pstm.executeQuery();
            
            while(res.next())
            {
                dbfile=res.getString("id");
            }
            System.out.println(dbfile);
        
        if(dbfile.equalsIgnoreCase(name))
            
        {
            
        SwingController controller = new SwingController();
        SwingViewBuilder factory=new SwingViewBuilder(controller);
        JPanel viewComponent=factory.buildViewerPanel();
        
        controller.getDocumentViewController().setAnnotationCallback(
        new org.icepdf.ri.common.MyAnnotationCallback(
        controller.getDocumentViewController()));
        
        MyAnnotationCallback myAnnotationCallback=new MyAnnotationCallback(
                controller.getDocumentViewController());
         
        controller.getDocumentViewController().setAnnotationCallback(myAnnotationCallback);
   
        System.out.println(path);
        controller.openDocument(path);
        JFrame Frame=new JFrame();
        //Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Frame.add(viewComponent);
        Frame.pack();
        Frame.validate();
        Frame.setVisible(true );
        }
        
         }
        catch(Exception e)
        {
         e.printStackTrace();
        }
       }
    }//GEN-LAST:event_year3ModulesMouseClicked

    private void year5ModulesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_year5ModulesMouseClicked
        if(evt.getClickCount()==2)
        {
        String file=null;
     
        String n=year5Modules.getSelectedValue().toString();
        
        System.out.println(n);
        
        try{
            conn=DriverManager.getConnection(url);
            System.out.println("Get connected!");
                       
            PreparedStatement pstm=conn.prepareStatement("select id from books where id=?;");
            pstm.setString(1,n);
            
            res=pstm.executeQuery();
            
            while(res.next())
            {
                file=res.getString("id");
            }
            file="Information System Management (CS-5209).pdf";
            System.out.println(file+"hhhhhhhhhhhh");
        
        if(file==n)
            
        {
        URL path5=moduleLists.class.getResource("/Information System Management (CS-5209).pdf");
        System.out.println(path5+"ppppppp");
        SwingController controller = new SwingController();
        SwingViewBuilder factory=new SwingViewBuilder(controller);
        JPanel viewComponent=factory.buildViewerPanel();
        
        controller.getDocumentViewController().setAnnotationCallback(
        new org.icepdf.ri.common.MyAnnotationCallback(
        controller.getDocumentViewController()));
        
        MyAnnotationCallback myAnnotationCallback=new MyAnnotationCallback(
                controller.getDocumentViewController());
         
        controller.getDocumentViewController().setAnnotationCallback(myAnnotationCallback);
   
        
        controller.openDocument(path5);
        JFrame Frame=new JFrame();
        //Frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Frame.add(viewComponent);
        Frame.pack();
        Frame.validate();
        Frame.setVisible(true );
        }
        year5Modules.validate();
        year5Modules.updateUI();
         }
        catch(Exception e)
        {
         e.printStackTrace();
        }
        }
    }//GEN-LAST:event_year5ModulesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        AdminPage ap=new AdminPage();
        lblname=ap.selItem;
        
        
        
        myChooser mc=new myChooser();
        lmodel=mc.model;
        
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new moduleLists().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JList allModules;
    public javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JScrollPane jScrollPane5;
    public javax.swing.JScrollPane spAllMol;
    public javax.swing.JList year1Modules;
    public javax.swing.JList year2Modules;
    public javax.swing.JList year3Modules;
    public javax.swing.JList year4Modules;
    public javax.swing.JList year5Modules;
    // End of variables declaration//GEN-END:variables
    public javax.swing.DefaultListModel modules;
    
}
